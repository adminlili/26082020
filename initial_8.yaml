---
- hosts: localhost
#  ignore_errors: true
  become: true 
  remote_user: root
  tasks: 
    - name: 'ping google.com 1 time'
      shell: "ping -c 1 google.com && ping -c 1 8.8.8.8"
      register: is_exist_connection

    - name: "check if exist connection"
      shell: 'echo "Check your internet connection"'
      when: is_exist_connection != 0
      
    - name: " Add update repo and install package epel-release from remote repo"
      block:
        - name: add docker repo 
          shell: 'yum-config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo && yum-config-manager --enable docker-ce-nightly && yum -y update'

        - name: is install epel-release repo
          shell: yum info epel-release
          register: if_installed_repo_epel    

        - name: install epel-release repo centos 7
          when:
            - ansible_facts['distribution'] == 'CentOS'      
            - ansible_facts['distribution_major_version'] == '7'      
            - if_installed_repo_epel == 0    
          shell: 'cd / && wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm && yum -y install ./epel-release-latest-7.noarch.rpm'

        - name: install epel-release repo centos 8
          when:
            - ansible_facts['distribution'] == 'CentOS'      
            - ansible_facts['distribution_major_version'] == '8'
            - if_installed_repo_epel == 0   
          shell: 'cd / && wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm && dnf -y install ./epel-release-latest-*.noarch.rpm'
          
    - name: check if file /etc/yum.repos.d/nginx.repo exists, if no - touch
      block:
        - name: check if file /etc/yum.repos.d/nginx.repo exists
          stat:
            path: '/etc/yum.repos.d/nginx.repo'
          register: if_exist_nginx_repo

        - name: if file /etc/yum.repos.d/nginx.repo not exists then create it
          file:
            path: '/etc/yum.repos.d/nginx.repo'
            state: touch
          when: not if_exist_nginx_repo.stat.exists

    - name: "Editing file /etc/yum.repos.d/nginx.repo"
      blockinfile: 
        backup: true
        block: |
            [nginx-stable]
            name=nginx stable repo
            baseurl=http://nginx.org/packages/centos/$releasever/$basearch/
            gpgcheck=1
            enabled=1
            gpgkey=https://nginx.org/keys/nginx_signing.key
            module_hotfixes=true
            
            [nginx-mainline]
            name=nginx mainline repo
            baseurl=http://nginx.org/packages/mainline/centos/\$releasever/\$basearch/
            gpgcheck=1
            enabled=0
            gpgkey=https://nginx.org/keys/nginx_signing.key
            module_hotfixes=true
        path: /etc/yum.repos.d/nginx.repo
        state: present
      
    - name: "Install necessary packages and utilites"
      block:
        - name: "install pkgs on Centos7"
          when: 
            - ansible_facts['distribution'] == 'CentOS'
            - ansible_facts['distribution_major_version'] == '7'
          yum: 
            name: "{{ item }}"
            state: latest
          loop: 
            - iotop
            - dstat
            - exim
            - rsync
            - logwatch
            - smartmontools
            - lsof
            - tcpdump
            - unzip
            - mcelog
            - mc
            - pciutils
            - net-tools
            - iptables-services
            - irqbalance
            - tmux
            - psmisc
            - chrony
            - bzip2
            - firewalld
            - yum-utils        

        - name: update repos and upgrade packages
          block:
            - name: update cache
              yum:
                update_cache: yes

            - name: upgrade packages to latest
              yum:
                name: "*"
                state: latest

        - name: "install pkgs on Centos 8"
          when: 
            - ansible_facts['distribution'] == 'CentOS'
            - ansible_facts['distribution_major_version'] == '8'
          yum: 
            name: "{{ item }}"
            state: latest
          loop: 
            - mc
            - iotop
            - atop
            - exim
            - rsync
            - logwatch
            - smartmontools
            - lsof
            - tcpdump
            - unzip
            - mcelog
            - net-tools
            - iptables-services
            - irqbalance
            - tmux
            - psmisc
            - chrony
            - bzip2
            - firewalld
            - yum-utils
    
    - name: check if packages in CentOS 7 are installed
      register: is_exists_needed_packages_centos7
      when:
            - ansible_facts['distribution'] == 'CentOS'
            - ansible_facts['distribution_major_version'] == '7' 
      yum: 
        name:
          - iotop
          - dstat
          - exim
          - rsync
          - logwatch
          - smartmontools
          - lsof
          - tcpdump
          - unzip
          - pciutils
          - net-tools
          - iptables-services
          - irqbalance
          - tmux
          - psmisc
          - chrony
          - bzip2
          - firewalld
          - yum-utils

    - name: "check if packages in CentOS 8 are installed"
      register: is_exists_needed_packages_centos8
      when:
            - ansible_facts['distribution'] == 'CentOS'
            - ansible_facts['distribution_major_version'] == '8'
      yum:
        name:  
          - iotop
          - atop
          - exim
          - rsync
          - logwatch
          - smartmontools
          - lsof
          - tcpdump
          - unzip
          - mc
          - net-tools
          - iptables-services
          - irqbalance
          - tmux
          - psmisc
          - chrony
          - bzip2
          - firewalld
          - yum-utils

    - name: "Erase/Remove packages and their relative dirs"
      block: 
        - name: "part1 of deleting"
          service: 
            name: auditd
            state: stopped
          
        - name: "part2 of deleting"
          yum: 
            name: "{{ item }}"
            state: absent
          loop: 
            - audit
            - selinux*

        - name: "part3 of deleting"
          file: 
            force: true
            path: "{{ item }}"            
            state: absent
          loop: 
            - /etc/selinux/targeted
            - /var/log/audit
      when: "AUDITD == 0"
     
    - name: "Erase/Remove other unneccesary packages"
      #sudo: true
      yum: 
        name: "{{ item }}"
        state: absent
      loop: 
        - sssd
        - ppp
        - wpa_supplicant
        - ntp
        - polkit

    - name: "Find .rpmsave files and delete them"
      block: 
        - name: "find files for deleting"
          find: 
            paths: /etc/
            patterns: "*.rpmsave"
          register: files_for_deleting1
          
        - name: delete finded files
          file: 
            force: true
            path: "{{ item.path }}"
            state: absent
          with_items: "{{ files_for_deleting1.files }}"

    - name: "delete other unneccesary dirs"
      block: 
        - name: part1
          file: 
            force: true
            path: /var/log/anaconda
            state: absent
              
        - name: part2
          shell: 'rm -f /var/log/*-{{ YEAR }}*'
          
    - name: set timezone and create symbolic link for value timezone and write it to file
      block: 
        - name: set timezone 
          command: timedatectl set-timezone "{{ TIMEZONE }}"

        - name: remove the current symlink or file
          command: rm -rf /etc/localtime

        - name: "create symbolic link and deleting existing dest files"
          command: ln -sf /usr/share/zonainfo/"{{ TIMEZONE }}" /etc/localtime

        - name: "write variable timezone in file"
          command: echo "{{ TIMEZONE }}" > /etc/timezone

    - name: "create dir /etc/skel/.ssh/ and /etc/skel/.ssh/authorized_keys with rights 700 and 600"
      block: 
        - name: "create dir"
          file: 
            mode: "0700"
            path: /etc/skel/.ssh
            state: directory

        - name: "create file in dir"
          file: 
            mode: "0600"
            path: /etc/skel/.ssh/authorized_keys
            state: touch    
          
    - name: "editing /etc/skel/.bashrc"
      blockinfile: 
        block: |
            #list content with . and ..\n\
            alias la='ls -lAa'\n\
            alias if='ls -FA'\n\
            alias ll='ls -lA'\n\
            alias l='less'\n\
            #search pattern in files ignore case\n\
            alias g='egrep -i'\n\
            alias p='ping'\n\
            export EDITOR=/usr/bin/mcedit\n\
            umask 002
            export PS1="[\[\e[32;40m\]\u\[\e[0m\]@\[\e[32;40m\]\h\[\e[0m\] \[\e[36;40m\]\w\[\e[0m\]\]\$ "
        insertafter: EOF
        path: /etc/skel/.bashrc

    - name: install pkg sudo and create group wheel and other actions
      block:
        - name: install pkg sudo
          yum:
            name: sudo
            state: latest

        - name: add user with username "{{ USERNAME }}" to group 'wheel'
          user: 
            name: "{{ USERNAME }}"
            append: true
            groups: wheel
            state: present

    - name: create file /home/"{{ USERNAME }}"/.ssh/authorized_keys
      file:
        path: /home/{{ USERNAME }}/.ssh/authorized_keys
        mode: "0600"
        state: touch

    - name: "rewrite file ~/.ssh/authorized_keys"
      lineinfile: 
        line: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIN0+mWVRN/qv35bmVGhuvbZqlolQroalE3lki6CfiW0Q ne4to@"
        path: /home/{{ USERNAME }}/.ssh/authorized_keys

    - name: "change 'username' and 'useremail' and rewrite in /etc/aliases"
      block: 
        - name: "replace '#root:marc' in /etc/aliases"
          lineinfile: 
            line: 'root:		"{{ USERNAME }}"'
            path: /etc/aliases
            regexp: "#root:\\t\\tmarc\\s"
            state: present
          
        - name: "write variables 'username' and 'useremail' in /etc/aliases"
          lineinfile: 
            insertafter: EOF
            line: '"{{ USERNAME }}":\\t"{{ USEREMAIL }}"'
            path: /etc/aliases
      when: "(USEREMAIL is defined) and (USEREMAIL|length > 0)"

    - name: "editing line '#auth sufficient pam_weel.so trust use_uid' in /etc/pam.d/su"
      lineinfile: 
        line: "auth\\t\\tsufficient\\tpam_wheel.so trust use_uid"
        path: /etc/pam.d/su
        regexp: "#auth\\t\\tsufficient\\tpam_wheel.so trust use_uid\\s"
        state: present
    - name: "editing line in /etc/selinux/config"
      lineinfile: 
        line: SELINUX=disabled
        path: /etc/selinux/config
        regexp: "SELINUX=[[:alpha:]]\\+\\s"
        state: present
      when: "AUDITD == 0"


    - name: "editing line '#?Port 22' in /etc/ssh/sshd_config"
      lineinfile: 
        line: "Port 5022"
        path: /etc/ssh/sshd_config
        regexp: "#?Port 22\\s"
        state: present
      
    - name: "editing line '#\\?PermitRootLogin' in /etc/ssh/sshd_config"
      lineinfile: 
        line: "PermitRootLogin no"
        path: /etc/ssh/sshd_config
        regexp: "#PermitRootLogin yes\\s"
        state: present
      
    - name: "editing line 'PasswordAuthentication' in /etc/ssh/sshd_config"
      lineinfile: 
        line: "PasswordAuthentication no"
        path: /etc/ssh/sshd_config
        regexp: "PasswordAuthentication yes\\s"
        state: present
      
    - name: "editing line 'UseDNS' in /etc/ssh/sshd_config"
      lineinfile: 
        line: "UseDNS no"
        path: /etc/ssh/sshd_config
        regexp: "#?UseDNS yes\\s"
        state: present
      
    - name: "editing line 'LogLevel' in /etc/systemd/system.conf"
      lineinfile: 
        line: LogLevel=notice
        path: /etc/systemd/system.conf
        regexp: "#LogLevel=info\\s"
        state: present
      
    - name: "editing line 'weekly' in /etc/logrotate.conf"
      lineinfile: 
        line: daily
        path: /etc/logrotate.conf
        regexp: "weekly\\s"
        state: present
      
    - name: "editing line 'rotate 4' in /etc/logrotate.conf"
      lineinfile: 
        line: "rotate 30"
        path: /etc/logrotate.conf
        regexp: "rotate 4\\s"
        state: present
      
    - name: "editing line '#compress' in /etc/logrotate.conf"
      lineinfile: 
        line: compress\n\nnotifempty\nnomail\nnoolddir\n
        path: /etc/logrotate.conf
        regexp: "#compress\\s"
        state: present
      
    - name: create file /etc/cron.d/raid-check if don't exist
      file:
        path: /etc/cron.d/raid-check
        state: touch
        mode: 644

    - name: "editing line '0 1 * * Sun root' in /etc/cron.d/raid-check"
      lineinfile: 
        line: "0 1 1 * * root"
        path: /etc/cron.d/raid-check
        regexp: "0 1 * * Sun root\\s"
        state: present

    - name: create needed files /etc/security/limits.d/20-nfile.conf and /etc/modprobe.d/disable.conf
      file:
        path: "{{ item }}"
        mode: 600
        state: touch
      loop:
        - /etc/security/limits.d/20-nfile.conf
        - /etc/modprobe.d/disable.conf
      
    - name: "editing /etc/security/limits.d/20-nfile.conf"
      blockinfile: 
        block: |
            *               soft    nofile      32768
            *               hard    nofile      65536
        path: /etc/security/limits.d/20-nfile.conf
      
    - name: "editing /root/.bashrc"
      blockinfile: 
        block: |
            alias la='ls -lAa'
            alias lf='ls -FA'
            alias ll='ls -lA'
            alias l='less'
            alias g='grep -i'
            alias p='ping'
            alias s='ssh'
            alias t='telnet'
            alias delr="sed -i 's/\r//'"
            alias catc="grep -v -P '^(#|$)'"
            
            export EDITOR=/usr/bin/mcedit
            export HISTSIZE=10000
            
            genpasswd() {
                local l=$1
                    [ "$l" == "" ] && l=20
                    tr -dc A-Za-z0-9 < /dev/urandom | head -c ${l} | xargs
            }
            
            export PS1="\[\[\e[31;40m\]\u\[\e[0m\]@\[\e[32;40m\]\h\[\e[0m\] \[\e[36;40m\]\w\[\e[0m\]\]$ "
        insertafter: EOF
        path: /root/.bashrc
      when: "BASHRC == 1"

    - name: create file /root/.tmux.conf
      file:
        path: /root/.tmux.conf
        state: touch
        mode: 600

    - name: "editing /root/.tmux.conf"
      blockinfile: 
        block: |
            set -g prefix C-a
            unbind-key C-b
            bind-key C-a send-prefix
        path: /root/.tmux.conf
      when: "BASHRC == 1"
      
      
    - name: "editing /etc/sysconfig/iptables"
      blockinfile: 
        block: |
            *filter
            :INPUT DROP [0:0]
            :FORWARD DROP [0:0]
            :OUTPUT ACCEPT [0:0]
            -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
            -A INPUT -p icmp -j ACCEPT
            -A INPUT -i lo -j ACCEPT
            -A INPUT -p tcp -m state --state NEW -m tcp --dport 5022 -j ACCEPT
            -A INPUT -s 138.201.33.71 -p tcp -m state --state NEW -m tcp --dport 10050 -j ACCEPT
            COMMIT
        path: /etc/sysconfig/iptables
      
    - name: "editing /etc/rc.local"
      lineinfile: 
        insertafter: EOF
        line: echo \"echo '\\$(date '+%d.%m.%Y %H:%M:%S') | mail -s \\'\\$(hostname) reboot\\' root'\"
        path: /etc/rc.local
      
    - name: "create dir with path '/root/.config/mc'"
      file: 
        path: /root/.config/mc
        recurse: "yes"
        state: directory
        
    - name: "create and rewrite file in /root/.config/mc/ini"
      block: 
        - name: "create file 'ini' in /root/.config/mc/ini"
          file: 
            path: /root/.config/mc/ini
            state: touch
          
        - name: "rewrite file in /root/.config/mc/ini"
          blockinfile: 
            block: |
              [Midnight-Commander]
              verbose=true
              shell_patterns=true
              auto_save_setup=true
              preallocate_space=false
              auto_menu=false
              use_internal_view=true
              use_internal_edit=true
              clear_before_exec=true
              confirm_delete=true
              confirm_overwrite=true
              confirm_execute=false
              confirm_history_cleanup=true
              confirm_exit=false
              confirm_directory_hotlist_delete=false
              confirm_view_dir=false
              safe_delete=false
              use_8th_bit_as_meta=false
              mouse_move_pages_viewer=true
              mouse_close_dialog=false
              fast_refresh=false
              drop_menus=false
              wrap_mode=true
              old_esc_mode=true
              cd_symlinks=true
              show_all_if_ambiguous=false
              use_file_to_guess_type=true
              alternate_plus_minus=false
              only_leading_plus_minus=true
              show_output_starts_shell=false
              xtree_mode=false
              file_op_compute_totals=true
              classic_progressbar=true
              use_netrc=true
              ftpfs_always_use_proxy=false
              ftpfs_use_passive_connections=true
              ftpfs_use_passive_connections_over_proxy=false
              ftpfs_use_unix_list_options=true
              ftpfs_first_cd_then_ls=true
              ignore_ftp_chattr_errors=true
              editor_fill_tabs_with_spaces=false
              editor_return_does_auto_indent=false
              editor_backspace_through_tabs=false
              editor_fake_half_tabs=false
              editor_option_save_position=true
              editor_option_auto_para_formatting=false
              editor_option_typewriter_wrap=false
              editor_edit_confirm_save=true
              editor_syntax_highlighting=true
              editor_persistent_selections=true
              editor_drop_selection_on_copy=true
              editor_cursor_beyond_eol=false
              editor_cursor_after_inserted_block=false
              editor_visible_tabs=false
              editor_visible_spaces=true
              editor_line_state=false
              editor_simple_statusbar=false
              editor_check_new_line=false
              editor_show_right_margin=false
              editor_group_undo=false
              editor_state_full_filename=false
              editor_ask_filename_before_edit=false
              nice_rotating_dash=true
              mcview_remember_file_position=false
              auto_fill_mkdir_name=true
              copymove_persistent_attr=true
              pause_after_run=1
              mouse_repeat_rate=100
              double_click_speed=250
              old_esc_mode_timeout=1000000
              max_dirt_limit=10
              num_history_items_recorded=60
              vfs_timeout=60
              ftpfs_directory_timeout=900
              ftpfs_retry_seconds=30
              fish_directory_timeout=900
              editor_tab_spacing=4
              editor_word_wrap_line_length=72
              editor_option_save_mode=0
              editor_backup_extension=~
              editor_filesize_threshold=64M
              editor_stop_format_chars=-+*\\,.;:&>
              mcview_eof=
              skin=default
              filepos_max_saved_entries=1024
              
              [Layout]
              message_visible=0
              keybar_visible=0
              xterm_title=1
              output_lines=0
              command_prompt=1
              menubar_visible=0
              free_space=1
              horizontal_split=0
              vertical_equal=1
              left_panel_size=118
              horizontal_equal=1
              top_panel_size=1
                
              [Misc]
              timeformat_recent=%b %e %H:%M
              timeformat_old=%b %e  %Y
              ftp_proxy_host=gate
              ftpfs_password=anonymous@
              display_codepage=UTF-8
              source_codepage=Other_8_bit
              autodetect_codeset=
              clipboard_store=
              clipboard_paste=
                
              [Colors]
              base_color=
              xterm-256color=
              color_terminals=
               
              [Panels]
              show_mini_info=true
              kilobyte_si=false
              mix_all_files=false
              show_backups=true
              show_dot_files=true
              fast_reload=false
              fast_reload_msg_shown=false
              mark_moves_down=true
              reverse_files_only=true
              auto_save_setup_panels=false
              navigate_with_arrows=false
              panel_scroll_pages=true
              panel_scroll_center=false
              mouse_move_pages=true
              filetype_mode=true
              permission_mode=false
              torben_fj_mode=false
              quick_search_mode=2
              select_flags=6
               
              [Panelize]
              Find *.orig after patching=find . -name \\*.orig -print
              Find SUID and SGID programs=find . \\( \\( -perm -04000 -a -perm /011 \\) -o \\( -perm -02000 -a -perm /01 \\) \\) -print
              Find rejects after patching=find . -name \\*.rej -print
              Modified git files=git ls-files --modified
            path: /root/.config/mc/ini
          
    - name: "editing in /etc/smartmontools/smartd.conf"
      block: 
        - name: "replacement entry  of DEVICESCAN in /etc/smartmontools/smartd.conf"
          lineinfile: 
            line: "#DEVICESCAN"
            path: /etc/smartmontools/smartd.conf
            regexp: "^DEVICESCAN"

        - name: "-1- write line in /etc/smartmontools/smartd.conf"
          lineinfile: 
            insertafter: EOF
            line: echo "DEVICESCAN -a -o on -S on -s (S/../.././01|L/../../7/04) -m root"
            path: /etc/smartmontools/smartd.conf
          
        - name: "-2- write line in /etc/smartmontools/smartd.conf"
          lineinfile: 
            insertafter: EOF
            line: echo "DEVICESCAN  -H -l error -l selftest -t -s (S/../../(3|5)/01|L/../../7/04) -I 190 -I 194 -I 231 -I 9 -W 5 -m root"
            path: /etc/smartmontools/smartd.conf
        
    
    - name: "4 blocks of chkconfig commands"
      block: 
        
        - name: "chkconfig chronyd"
          shell: "chkconfig --level 3 chronyd on"
        
        - name: "chkconfig iptables"
          shell: "chkconfig --level 3 iptables on"
        
        - name: "chkconfig smartd"
          shell: "chkconfig --level 3 smartd on"
        
        - name: "chkconfig mcelog"
          shell: "chkconfig --level 3 mcelog on"
        
        - name: "chkconfig atop"
          shell: "chkconfig --level 3 atop on"
         
        - name: "chkconfig firewalld"
          shell: "chkconfig --level 3 firewalld off"
      
    - name: "install and configure zabbix-agent"
      block: 
        - name: "install pkg 'zabbix' from official repo"
          rpm_key: 
            key: /etc/pki/rpm-gpg/RPM-GPG-KEY-ZABBIX-A14FE591
            state: present
        
        - name: "install pkg 'zabbix-agent'"
          yum: 
            name: zabbix-agent
            state: present

        - name: "editing /etc/zabbix/zabbix_agentd.conf"
          blockinfile: 
            block: |
                PidFile=/var/run/zabbix/zabbix_agentd.pid
                LogFile=/var/log/zabbix/zabbix_agentd.log
                LogFileSize=0
                Server=138.201.33.71
                ListenPort=10050
                Hostname="{{ HOSTNAME }}"
                Include=/etc/zabbix/zabbix_agentd.d/*.conf
            path: /etc/zabbix/zabbix_agentd.conf
              
        - name: "chkconfig zabbix-agent"
          shell: "chkconfig --level 3 zabbix-agent on"
      when: (ansible_facts['distribution'] == 'CentOS') and ((ansible_facts['distribution_major_version'] == '7') or  (ansible_facts['distribution_major_version'] == '8')) and ZABBIX == 1
    
    - name: "install pkg 'remi' from mirror"
      when: "REMI == 1"
      yum: 
        name: "http://rpms.famillecollet.com/enterprise/remi-release-7.rpm"
        state: present
    
    - name: "install pkg 'percona' from official repo"
      when: "PERCONA == 1"
      yum: 
        name: "https://repo.percona.com/centos/7/RPMS/noarch/percona-release-1.0-11.noarch.rpm"
        state: present
    
    - name: adding pkg docker_ce_repo
      when: "DOCKER == 1"
      shell: 'yum-config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo && yum-config-manager --enable docker-ce-nightly && yum -y update'
      
    - name: install other needed pkgs
      shell: yum -y install "{{ item }}"
      loop:
        - brotli.x86_64

    - name: make cache on Centos 7
      when:
        - ansible_facts['distribution'] == 'CentOS'      
        - ansible_facts['distribution_major_version'] == '7'                 
      shell: yum makecache

    - name: make cache on Centos 8
      when:
        - ansible_facts['distribution'] == 'CentOS'      
        - ansible_facts['distribution_major_version'] == '8'                 
      shell: dnf makecache

    - name: "update repos on host"
      yum: 
        state: present
        update_cache: true
  vars: 
    - HOSTNAME: ""
  vars_files: 
    - vars/default.yaml   



          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
